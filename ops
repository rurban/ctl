{"version":1,"ops":[{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040210,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTMyMjU="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call done() or is_end().\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can eventually remove all `_range` methods, and replace e.g. `union (\u0026a)` with a `union(A_begin(\u0026a))` call.","files":null},{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040241,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTM0ODY="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call done() or is_end().\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can also eventually remove all `_range` methods, and replace e.g. `union (\u0026a)` with a `union(A_begin(\u0026a))` call.","files":null},{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040263,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTM2NTU="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call `done()`.\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can also eventually remove all `_range` methods, and replace e.g. `union (\u0026a)` with a `union(A_begin(\u0026a))` call.","files":null},{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040295,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTM4NzY="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call `done()`.\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field with our `range` method.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can also eventually remove all `_range` methods, and replace e.g. `union (\u0026a)` with a `union(A_begin(\u0026a))` call.","files":null},{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040346,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTQyNjY="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call `done()`.\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field with our `range` method.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can also eventually remove all `_range` methods, and replace e.g. `A_union (\u0026a)` with a `A_union(A_begin(\u0026a))` call.","files":null},{"type":6,"author":{"id":"67acf4ce3a9e0b675b41dc633e984435404c2f17"},"timestamp":1613040419,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0OTIzOTQ4OTg="},"target":"26da50c41b8dd3e86881cc45f67d618a880503b0d6c169f096d8c6aeda03270e","message":"More iterator redesigns\n\nSTL iterators only contain the pointer and the overload operators to access the node/element and the valueref. That's why you can check in the STL with pos == end(), but we cannot, we must call `done()`.\n\nOur iterator is a fat iterator, i.e. it contains the end of the range by itself, i.e. it is secure.\nSo we can replace all `I* first, I* last` pairs in our range variants with a single `I*range` arg. The default last is always end, but you can change the end field with our `range` method.\n\nRemove the ref field and use the I, ref method in foreach loops. we don't need to set ref in every iteration. Our ref is inlined to the accessor anyway (T* value or node-\u003evalue).\n\nSee also https://www.informit.com/articles/article.aspx?p=1407357\n\nSo we can also eventually remove all `_range` methods, and replace e.g. `A_union (\u0026a, \u0026b)` with a `A_union(A_begin(\u0026a), A_begin(\u0026b))` call.","files":null}]}